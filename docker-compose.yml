services:
  db:
    image: postgres:17
    container_name: movies-db
    restart: unless-stopped
    env_file: ${ENV_FILE:-.env.development}
    ports:
      - "0.0.0.0:${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app_network
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-koji} -d ${POSTGRES_DB:-movies}",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  server:
    build:
      context: ./server
      dockerfile: ${SERVER_DOCKERFILE:-Dockerfile.dev}
    container_name: movies-server
    restart: unless-stopped
    ports:
      - "0.0.0.0:${SERVER_PORT:-3000}:3000"
    env_file: ${ENV_FILE:-.env.development}
    environment:
      - NODE_ENV=${NODE_ENV:-development}
    develop:
      watch:
        - action: sync
          path: ./server/src
          target: /usr/src/app/src
        - action: sync
          path: ./server/tsconfig.json
          target: /usr/src/app/tsconfig.json
        - action: sync
          path: ./server/nest-cli.json
          target: /usr/src/app/nest-cli.json
        - action: rebuild
          path: ./server/package.json
        - action: rebuild
          path: ./server/yarn.lock
    volumes:
      # Exclude node_modules from volume mount
      - /usr/src/app/node_modules
    networks:
      - app_network
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build:
      context: ./client
      dockerfile: ${CLIENT_DOCKERFILE:-Dockerfile.dev}
      args:
        - VITE_PUBLIC_API_BASE_URL=${VITE_PUBLIC_API_BASE_URL:-/api}
    container_name: movies-frontend
    restart: unless-stopped
    ports:
      - "0.0.0.0:${FRONTEND_PORT:-5173}:${FRONTEND_INTERNAL_PORT:-5173}"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - VITE_PUBLIC_API_BASE_URL=${VITE_PUBLIC_API_BASE_URL:-/api}
    develop:
      watch:
        - action: sync
          path: ./client/src
          target: /app/src
        - action: sync
          path: ./client/public
          target: /app/public
        - action: sync
          path: ./client/index.html
          target: /app/index.html
        - action: sync
          path: ./client/vite.config.ts
          target: /app/vite.config.ts
        - action: sync
          path: ./client/tsconfig.json
          target: /app/tsconfig.json
        - action: sync
          path: ./client/tsconfig.app.json
          target: /app/tsconfig.app.json
        - action: sync
          path: ./client/tsconfig.node.json
          target: /app/tsconfig.node.json
        - action: rebuild
          path: ./client/package.json
        - action: rebuild
          path: ./client/yarn.lock
    volumes:
      # Exclude node_modules from volume mount
      - /app/node_modules
    networks:
      - app_network
    depends_on:
      - server

volumes:
  postgres_data:
    driver: local

networks:
  app_network:
    driver: bridge
