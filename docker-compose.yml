services:
  db:
    image: postgres:17
    container_name: movies-db
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-movies_dev}
      POSTGRES_USER: ${POSTGRES_USER:-koji}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-koji} -d ${POSTGRES_DB:-movies}"]
      interval: 30s
      timeout: 10s
      retries: 3

  server:
    build:
      context: ./server
      target: development
    container_name: movies-server
    restart: unless-stopped
    ports:
      - "${SERVER_PORT:-3000}:3000"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - DATABASE_URL=postgresql://${POSTGRES_USER:-koji}:${POSTGRES_PASSWORD:-password}@db:5432/${POSTGRES_DB:-movies}
    volumes:
      - ./server:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - app_network
    depends_on:
      db:
        condition: service_healthy
    command: yarn start:dev

  frontend:
    build: ./client
    container_name: movies-frontend
    ports:
      - "${FRONTEND_PORT:-80}:80"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_API_URL=http://localhost:${SERVER_PORT:-3000}
    networks:
      - app_network
    depends_on:
      - server

volumes:
  postgres_data:
    driver: local

networks:
  app_network:
    driver: bridge
